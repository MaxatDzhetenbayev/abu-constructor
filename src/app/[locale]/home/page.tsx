"use client";
import { useScroll } from "@/shared/lib/hooks/useScroll";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/shared/ui";
import { InputProps } from "@/shared/ui/input";
import { TextareaProps } from "@/shared/ui/textarea";
import clsx from "clsx";
import { motion, useMotionValue } from "framer-motion";
import {
  ArrowRight,
  BookOpen,
  GraduationCap,
  School,
  Shield,
  X,
} from "lucide-react";
import Image from "next/image";
import { useParams } from "next/navigation";
import Script from "next/script";
import { ReactNode, useEffect, useRef, useState } from "react";
import { Swiper, SwiperSlide } from "swiper/react";

// Import Swiper styles
import "swiper/css";
import "swiper/css/effect-coverflow";
import "swiper/css/pagination";

import "../../globals.css";
// import required modules
import { EffectCoverflow, Pagination } from "swiper/modules";

const section_1 = [
  "58 –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º",
  "2 —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–±—â–µ–∂–∏—Ç–∏—è",
  "–í–æ–µ–Ω–Ω–∞—è –∫–∞—Ñ–µ–¥—Ä–∞",
  "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Ö–Ω–æ–∫–ª–∞—Å—Ç–µ—Ä Abai IT Valley",
  "–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –º–æ–±–∏–ª—å–Ω–æ—Å—Ç—å",
];
const fact_list = [
  {
    count: 45,
    title: "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π",
    icon: "üéì",
  },
  {
    count: 10,
    title: "–ú–æ–ª–æ–¥–µ–∂–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π",
    icon: "ü§ù",
  },
  {
    count: 8,
    title: "–£—á–µ–±–Ω—ã—Ö –∫–æ—Ä–ø—É—Å–æ–≤",
    icon: "üèõÔ∏è",
  },
  {
    count: 1998,
    title: "–ì–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞",
    icon: "üìÖ",
  },
];

const educationPrograms = [
  {
    title: "–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç",
    count: 29,
    icon: GraduationCap,
    color: "bg-blue-100",
  },
  { title: "–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞", count: 10, icon: BookOpen, color: "bg-green-100" },
  { title: "–î–æ–∫—Ç–æ—Ä–∞–Ω—Ç—É—Ä–∞", count: 6, icon: School, color: "bg-yellow-100" },
  { title: "–í–æ–µ–Ω–Ω–∞—è –∫–∞—Ñ–µ–¥—Ä–∞", count: 10, icon: Shield, color: "bg-red-100" },
];

const news = [
  {
    text: "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä—Å–∫–æ-–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ Alikhan Bokeikhan University",
    desc: "–†–∞–±–æ—Ç–∞ –ø–µ–¥–∞–≥–æ–≥–∞-—É—á–∏—Ç–µ–ª—è –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ –∏ –±—É–¥–µ—Ç –æ–¥–Ω–æ–π —Å–∞–º—ã—Ö –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç",
    img: "/images/banner-2.jpeg",
  },
  {
    text: "–°–µ–º–µ—Å—Ç—Ä–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ –≤ Indian Institute of Technology Bombay",
    desc: "–†–∞–±–æ—Ç–∞ –ø–µ–¥–∞–≥–æ–≥–∞-—É—á–∏—Ç–µ–ª—è –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ –∏ –±—É–¥–µ—Ç –æ–¥–Ω–æ–π —Å–∞–º—ã—Ö –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç",
    img: "/images/banner-3.jpeg",
  },
  {
    text: "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ ¬´–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å¬ª",
    desc: "–†–∞–±–æ—Ç–∞ –ø–µ–¥–∞–≥–æ–≥–∞-—É—á–∏—Ç–µ–ª—è –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ –∏ –±—É–¥–µ—Ç –æ–¥–Ω–æ–π —Å–∞–º—ã—Ö –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç",
    img: "/images/banner-4.jpeg",
  },
];

export default function Page() {
  // useEffect(() => {
  //   const tl = gsap.timeline({
  //     scrollTrigger: {
  //       trigger: ".content",
  //       start: "top 20%",
  //       end: "bottom 30%",
  //       scrub: true,
  //       pin: true,
  //     },
  //   });

  //   tl.fromTo(".block-1", { opacity: 0 }, { opacity: 1, duration: 1 })
  //     .fromTo(
  //       ".block-2 li",
  //       { opacity: 0, y: -200 },
  //       {
  //         opacity: 1,
  //         y: 0,
  //         duration: 1,
  //         stagger: 0.3,
  //         ease: "power2.out",
  //       }
  //     )
  //     .fromTo(".block-3", { opacity: 0 }, { opacity: 1, duration: 1 })
  //     .fromTo(".block-4", { opacity: 0 }, { opacity: 1, duration: 1 });
  // }, []);
  const scrolled = useScroll(40);
  const height = scrolled ? 94 : 134;
  return (
    <main className="w-full h-full">
      {/* Hero section */}
      <section
        className={`w-full h-[500px] md:h-[750px] [@media(min-width:890px)]:-top-[96px] [@media(min-width:890px)]:relative`}
      >
        <AppealDialog />
        {/* <div className="absolute left-0 -top-20  w-full h-[100%] -z-10 bg-black/20"></div> */}
        <video
          muted
          loop
          autoPlay
          playsInline
          className="object-cover w-full h-full"
        >
          <source src="/hero-video.webm" type="video/webm"></source>
        </video>
      </section>
      <section className=" flex flex-col gap-24 md:px-3 lg:px-0 ">
        <SectionOne />
        <PresidentSection />
        <Gallery />
        <News />
        <IELTS />
        <Partners />
        <Accreditation />
      </section>
    </main>
  );
}
const SectionOne = () => {
  return (
    <Container>
      <Heading className="mt-10 md:mt-0">–ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞</Heading>
      <section className="flex justify-center flex-wrap xl:flex-nowrap   gap-5  rounded-md ">
        {section_1.map((s, idx) => (
          <section
            key={idx}
            className="flex items-center relative h-[10.75rem] rounded-md px-2.5 w-[17.875rem] bg-abu_primary "
          >
            <span className="text-white font-bold text-2xl">{s}</span>
            <Image
              className={clsx(
                "absolute left-1/2 -bottom-10   h-auto",
                {
                  1: "w-[9.188rem]",
                  2: "w-[5.688rem]",
                  3: "w-[8.25rem]",
                  4: "w-[10.5rem]",
                  5: "w-[10.375rem]",
                }[idx + 1]
              )}
              src={`/infograph/${idx + 1}.svg`}
              alt={`index-${idx + 1}`}
              width={100}
              height={100}
            />
          </section>
        ))}
      </section>
    </Container>
  );
};
const PresidentSection = () => {
  return (
    <section className="relative  min-h-[51.438rem]">
      <div className="absolute top-0 left-0 right-0 bottom-0 bg-abu_primary bg-opacity-95 bg-president" />
      <Container className="mt-16 rounded-[10px]    overflow-hidden text-white  ">
        <motion.h2
          transition={{ duration: 0.5 }}
          whileInView={{
            x: 0,
            opacity: 1,
          }}
          initial={{
            opacity: 0,
            x: -100,
          }}
          className="text-4xl  font-bold mb-20  "
        >
          –û–ë–†–ê–©–ï–ù–ò–ï –ü–†–ï–ó–ò–î–ï–ù–¢–ê
        </motion.h2>

        <div className="w-full  flex flex-col lg:grid grid-cols-[30.438rem_1fr]">
          <motion.div
            transition={{ duration: 0.5 }}
            whileInView={{
              x: 0,
              opacity: 1,
            }}
            initial={{
              opacity: 0,
              x: -100,
            }}
            className="lg:h-full    relative hidden lg:block"
          >
            <Image
              src="/icons/president.png"
              alt="president"
              width={430}
              height={430}
              className="max-w-[30.438rem]  w-full h-auto  "
            />
            {/* <div className="h-[210px] w-full bg-abu_primary rounded-md absolute bottom-0  -z-10" /> */}
          </motion.div>
          <div className="pl-5">
            <motion.section className="flex flex-col gap-5">
              <motion.div
                transition={{ duration: 0.5 }}
                whileInView={{
                  x: 0,
                  opacity: 1,
                }}
                initial={{
                  opacity: 0,
                  x: -100,
                }}
                className="relative h-[50vh] md:h-[80vh] lg:hidden "
              >
                <Image
                  src="/icons/president.png"
                  alt="president"
                  width={430}
                  height={430}
                  className="max-w-[430px]  w-full h-auto absolute bottom-0 left-1/2 -translate-x-1/2 right-1/2"
                />
                <div className="h-[210px] w-full bg-abu_primary rounded-md absolute bottom-0  -z-10" />
              </motion.div>
              <motion.div
                transition={{ duration: 0.5 }}
                whileInView={{
                  x: 0,
                  opacity: 1,
                }}
                initial={{
                  opacity: 0,
                  x: 100,
                }}
                className=" pl-4  border-l-4 border-white min-h-[32.75rem] "
              >
                <p className="text-justify text-xl font-bold   pl-3">
                  –î–æ—Å—Ç–∞—Ä, ”ò–ª–∏—Ö–∞–Ω –ë”©–∫–µ–π—Ö–∞–Ω —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–Ω—ñ“£ —Ä–µ—Å–º–∏ —Å–∞–π—Ç—ã–Ω–∞ “õ–æ—à
                  –∫–µ–ª–¥—ñ“£—ñ–∑–¥–µ—Ä! –ë—ñ–∑ –µ—Ä–µ–∫—à–µ —Ç–∞—Ä–∏—Ö–∏ –∫–µ–∑–µ“£–¥–µ ”©–º—ñ—Ä —Å“Ø—Ä—ñ–ø –∂–∞—Ç—ã—Ä–º—ã–∑:
                  ”ò–ª–µ–º IV ”®–Ω–¥—ñ—Ä—ñ—Å—Ç—ñ–∫ —Ä–µ–≤–æ–ª—é—Ü–∏—è “õ–∞—Ä—Å–∞“£—ã–Ω–¥–∞ —Ç“±—Ä. –®–µ–∫–∞—Ä–∞–º–µ–Ω
                  –±–µ–ª–≥—ñ–ª–µ–Ω–±–µ–π—Ç—ñ–Ω –±—ñ–ª—ñ–º –±–µ—Ä—É –∫–µ“£—ñ—Å—Ç—ñ–≥—ñ–Ω—ñ“£ –∫”©–∫–∂–∏–µ–≥—ñ –±–∞—Ä—ã–Ω—à–∞
                  –∫–µ“£–µ–π—ñ–ø –∫–µ–ª–µ–¥—ñ. –û–Ω—ã“£ –∞–π“ì–∞“ì—ã ‚Äì —à–µ—Ç–µ–ª–¥—ñ–∫ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Ç–µ—Ä–¥—ñ“£
                  “õ–∞–∑–∞“õ—Å—Ç–∞–Ω–¥—ã“õ –∂–æ“ì–∞—Ä—ã –æ“õ—É –æ—Ä—ã–Ω–¥–∞—Ä—ã–Ω–¥–∞ —Ñ–∏–ª–∏–∞–ª–¥–∞—Ä—ã–Ω—ã“£ –∞—à—ã–ª—É—ã.
                  “∞–ª—Ç—Ç—ã“õ –º–µ–Ω—Ç–∞–ª–∏—Ç–µ—Ç—ñ–º—ñ–∑ –±–µ–Ω —Ç–∞—Ä–∏—Ö–∏, –º”ô–¥–µ–Ω–∏ “õ“±–Ω–¥—ã–ª—ã“õ—Ç–∞—Ä—ã–º—ã–∑–¥—ã
                  –±–∞—Ä—ã–Ω—à–∞ —Å–∞“õ—Ç–∞–π –æ—Ç—ã—Ä—ã–ø, ”©–∑—ñ–Ω–¥—ñ–∫ “õ–æ–ª—Ç–∞“£–±–∞—Å—ã –±–∞—Ä —ñ—Ä–≥–µ–ª—ñ –æ“õ—É –æ—Ä–Ω—ã
                  –±–æ–ª—É –º–∏—Å—Å–∏—è—Å—ã–Ω–∞ —Å”ô–π–∫–µ—Å, –∑–∞–º–∞–Ω “Ø–Ω–¥–µ—É—ñ–Ω–µ –±–µ–π—ñ–º–¥–µ–ª—É–≥–µ
                  –º—ñ–Ω–¥–µ—Ç—Ç—ñ–º—ñ–∑. –ê“õ–ø–∞—Ä–∞—Ç—Ç—ã“õ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∞“ì—ã–Ω—ã–Ω–∞–Ω “õ–∞–ª—ã—Å–ø–∞–π, Abai
                  IT-Walley –∞—Ä“õ—ã–ª—ã –ñ–∞—Å–∞–Ω–¥—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—ñ–Ω—ñ –∂“±–º—ã—Å —Å—Ç–∏–ª—ñ, ”©–º—ñ—Ä —Å“Ø—Ä—É
                  —Å–∞–ª—Ç—ã —Ä–µ—Ç—ñ–Ω–¥–µ —Ç“±—Ç—ã–Ω—É—ã–Ω–∞ –∂–æ–ª –∞—à—ã–ø, “Ø–∑–¥—ñ–∫ —Ç”ô–∂—ñ–∏–±–µ–ª–µ—Ä –µ–Ω–≥—ñ–∑—É
                  –∂“Ø–π–µ—Å—ñ “õ–∞—Ä–∞—Å—Ç—ã—Ä—ã–ª—É–¥–∞. –ñ–∞—Å–∞–Ω–¥—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äì –±“Ø–≥—ñ–Ω–≥—ñ —É–∞“õ—ã—Ç—Ç—ã“£ –∫“Ø–Ω
                  —Ç”ô—Ä—Ç—ñ–±—ñ–Ω–¥–µ–≥—ñ –±—ñ—Ä—ñ–Ω—à—ñ –º”ô—Å–µ–ª–µ. –ê–ª–∞—à –∫”©—Å–µ–º—ñ ”ò–ª–∏—Ö–∞–Ω –ë”©–∫–µ–π—Ö–∞–Ω ¬´–∞–ª–¥–∞
                  –∫“Ø–Ω–¥—ñ –∫”©—Ä–µ –±—ñ–ª–µ—Ç—ñ–Ω “±—Ä–ø–∞“õ –∫–µ–ª–µ–¥—ñ¬ª, - –¥–µ–ø –∫–µ–ª–µ—à–µ–∫–∫–µ –∑–æ—Ä “Ø–º—ñ—Ç–ø–µ–Ω
                  —Å–µ–Ω—ñ–º –∞—Ä—Ç“õ–∞–Ω—ã –±–µ–ª–≥—ñ–ª—ñ. –ö–µ—à–µ–≥—ñ –∫“Ø–Ω—ñ “õ–∏—è–ª –º–µ–Ω –∞—Ä–º–∞–Ω –±–æ–ª“ì–∞–Ω
                  –±“Ø–≥—ñ–Ω–≥—ñ –∫“Ø–Ω–Ω—ñ“£ –∞“õ–∏“õ–∞—Ç—ã –∞–¥–∞–º–∑–∞—Ç—Ç—ã –∂–∞“£–∞ —Ç–∞—Ä–∏—Ö—Ç–∞“ì—ã –ø—Ä–æ–≥—Ä–µ—Å–∫–µ
                  –∂–µ—Ç–µ–ª–µ–π–¥—ñ. –¢”ô—É–µ–ª—Å—ñ–∑–¥—ñ–∫ –∞“£—Å–∞“ì–∞–Ω –ê–ª–∞—à –∞—Ä–¥–∞“õ—Ç—ã–ª–∞—Ä—ã–Ω—ã“£ –∏–¥–µ—è—Å—ã–Ω
                  –∂“Ø–π–µ–ª—ñ —Ç“Ø—Ä–¥–µ —ñ–ª–≥–µ—Ä—ñ–ª–µ—Ç—É –±–∞—Å—Ç—ã –º–∞“õ—Å–∞—Ç—ã–º—ã–∑ –±–æ–ª–∞ –±–µ—Ä–µ–¥—ñ. –ë—ñ–ª—ñ–º–¥—ñ
                  —ñ–∑–≥—ñ–ª–µ–Ω–¥—ñ—Ä—É –∞—Ä“õ—ã–ª—ã –∂–æ“ì–∞—Ä—ã –∫”ô—Å—ñ–±–∏ –±—ñ–ª—ñ–∫—Ç—ñ–ª—ñ–≥—ñ —Ç—É—Ä–∞–ª—ã –¥–∏–ø–ª–æ–º—ã
                  –±–∞—Ä –º–∞–º–∞–Ω “ì–∞–Ω–∞ –µ–º–µ—Å –∫–µ–º–µ–ª –¢“±–ª“ì–∞ —Ç”ô—Ä–±–∏–µ–ª–µ—É –∏–≥—ñ–ª—ñ–∫—Ç—ñ,
                  –∞—è“õ—Ç–∞–ª–º–∞–π—Ç—ã–Ω “õ—ã–∑–º–µ—Ç—ñ–º—ñ–∑ –±–æ–ª—ã–ø “õ–∞–ª–∞ –±–µ—Ä–µ–¥—ñ.
                </p>
                <p className="text-[2rem] italic text-right font-extrabold ">
                  –° —É–≤–∞–∂–µ–Ω–∏–µ–º,
                  <br />
                  –®—ã—Ä—ã–Ω –ö—É—Ä–º–∞–Ω–±–∞–µ–≤–∞{" "}
                </p>
              </motion.div>
            </motion.section>
          </div>
        </div>
      </Container>
    </section>
  );
};
const Rector = ({ close }: { close?: ReactNode }) => {
  return (
    <Container className="relative rounded-xl md:rounded-3xl w-full max-h-[100svh] md:max-h-[54rem]  md:max-w-[70.875rem]   bg-abu_primary  mb-3 px-0 md:px-3">
      {close}
      <section className="px-0 py-12 lg:p-[4.3rem]">
        <Heading className="text-white text-center md:text-left">
          –û–±—Ä–∞—â–µ–Ω–∏–µ
        </Heading>
        <form className="grid grid-cols-1 lg:grid-cols-2 gap-x-0 gap-y-4 lg:gap-4 ">
          <div className="flex flex-col gap-4 lg:gap-8">
            <RectorFormInput placeholder="–§–ò–û" icon="/rector/user.svg" />
            <RectorFormInput
              placeholder="–ü–æ—á—Ç–∞"
              gap={false}
              icon="/rector/email.svg"
            />
            <RectorFormInput
              placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
              type="tel"
              gap={false}
              icon="/rector/tel.svg"
            />
          </div>
          <div className="flex flex-col gap-3 col-start-1 lg:col-start-2">
            <Select>
              <SelectTrigger className=" px-6 py-7 lg:py-9 rounded-[10rem]  text-abu_primary">
                <SelectValue placeholder={"–û–±—Ä–∞—â–µ–Ω–∏–µ"} />
              </SelectTrigger>
              <SelectContent className="">
                <SelectItem value="ru">–û–±—Ä–∞—â–µ–Ω–∏–µ</SelectItem>
                <SelectItem value="ru">–û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Ä–µ–∫—Ç–æ—Ä—É</SelectItem>
                <SelectItem value="ru">–ü—Ä–µ—Ç–µ–Ω–∑–∏—è</SelectItem>
                <SelectItem value="ru">–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ—Ä—Ä—É–ø—Ü–∏–∏</SelectItem>
              </SelectContent>
            </Select>
            <RectorFormTextarea
              className="min-h-[12.5rem]"
              placeholder="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
              icon="/rector/message.svg"
            />
          </div>
          <button className="px-14 py-3 rounded-[5rem] col-span-2   w-full  text-center bg-[#FDC90C] text-[#1A0700]">
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </form>
      </section>
    </Container>
  );
};
const gallery_1 = ["1", "2", "3", "4"];
const gallery_2 = ["5", "6", "7", "8"];
const Gallery = () => {
  return (
    <Container className="flex flex-col items-center xl:flex-row gap-5">
      <section className="grid  grid-cols-1  md:grid-cols-[35.375rem,1fr] gap-3">
        <section className="flex flex-col gap-10">
          <Heading>–ì–∞–ª–µ—Ä–µ—è</Heading>
          <p>
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ñ–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—é –Ω–∞—à–µ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞! –ó–¥–µ—Å—å –º—ã —Å–æ–±—Ä–∞–ª–∏
            —è—Ä–∫–∏–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ—Å—è –º–æ–º–µ–Ω—Ç—ã –∏–∑ –∂–∏–∑–Ω–∏ –Ω–∞—à–µ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞,
            –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –í –∫–∞–∂–¥–æ–º –∞–ª—å–±–æ–º–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ
            —É–≤–∏–¥–µ—Ç—å, —á–µ–º –∂–∏–≤–µ—Ç –Ω–∞—à–µ —É—á–µ–±–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ: –Ω–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è,
            —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã, —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫—É—é –∂–∏–∑–Ω—å, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –º–Ω–æ–≥–æ–µ
            –¥—Ä—É–≥–æ–µ. –ú—ã –≥–æ—Ä–¥–∏–º—Å—è —É—Å–ø–µ—Ö–∞–º–∏ –Ω–∞—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π,
            –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –≤–∑–∞–∏–º–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –Ω–∞—à
            —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —É–Ω–∏–∫–∞–ª—å–Ω—ã–º. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –∏
            –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –±–æ–ª—å—à–æ–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–æ–π —Å–µ–º—å–µ!
          </p>
          <button className="px-[4.25rem] w-fit rounded-[1.2rem] py-5 bg-abu_primary text-white font-bold text-3xl">
            –ü–û–°–ú–û–¢–†–ï–¢–¨
          </button>
        </section>
        <section>
          <Swiper
            effect={"coverflow"}
            grabCursor={true}
            loop
            centeredSlides={true}
            slidesPerView={"auto"}
            coverflowEffect={{
              rotate: 0,
              stretch: 0,
              depth: 100,
              modifier: 1,
              slideShadows: false,
            }}
            pagination={true}
            modules={[EffectCoverflow, Pagination]}
            className="gallery-swiper"
          >
            {gallery_1.map((i) => (
              <SwiperSlide key={i} className="gallery-swiper-slide">
                <img
                  src={`/icons/gallery/gallery1.jpeg`}
                  className="block w-full"
                />
              </SwiperSlide>
            ))}
          </Swiper>
        </section>
      </section>
    </Container>
  );
};
const SLcards = [
  {
    img: "/icons/sl1.png",
    desc: "–†–∞–±–æ—Ç–∞ –ø–µ–¥–∞–≥–æ–≥–∞-—É—á–∏—Ç–µ–ª—è –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ –∏ –±—É–¥–µ—Ç –æ–¥–Ω–æ–π —Å–∞–º—ã—Ö –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç",
    text: "–°—Ç—É–¥–µ–Ω—Ç 2 –∫—É—Ä—Å–∞ –î–∏–∞—Å –ù—É—Ä—Ç–∞–µ–≤ —Å—Ç–∞–ª –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–º —Å–µ—Ä–µ–±—Ä—è–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã –Ω–∞ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ç—É—Ä–Ω–∏—Ä–µ –ø–æ —Å–º–µ—à–∞–Ω–Ω—ã–º –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞–º",
  },
  {
    img: "/icons/sl2.png",
    desc: "–†–∞–±–æ—Ç–∞ –ø–µ–¥–∞–≥–æ–≥–∞-—É—á–∏—Ç–µ–ª—è –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ –∏ –±—É–¥–µ—Ç –æ–¥–Ω–æ–π —Å–∞–º—ã—Ö –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç",
    text: "–ù–∞—à–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã –∑–∞–Ω—è–ª–∏ –ø—Ä–∏–∑–æ–≤–æ–µ 2 –º–µ—Å—Ç–æ –Ω–∞ –∫–æ–º–∞–Ω–¥–Ω—ã—Ö –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∏–≥—Ä–∞—Ö",
  },
];
const Container = ({
  children,
  className,
}: {
  children: ReactNode;
  className?: string;
}) => {
  return (
    <section
      className={clsx(
        "max-w-[1500px] font-raleway px-3  w-full mx-auto",
        className
      )}
    >
      {children}
    </section>
  );
};
const Heading = ({
  children,
  className,
}: {
  children: ReactNode;
  className?: string;
}) => {
  return (
    <h2
      className={clsx(
        "text-2xl lg:text-[2rem]  font-montserrat  pl-3 md:pl-0 lg:text-4xl  font-bold mb-4 md:mb-8 text-[#640000]",
        className
      )}
    >
      {children}
    </h2>
  );
};

const events = [
  {
    label: { n: 27, l: "–û–ö–¢" },
    title: "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç—è–∑–∞–Ω–∏—è —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤",
    text: "–°–æ—Å—Ç–æ–∏—Ç—å—Å—è —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –ø–æ —Ä–∞–∑–Ω—ã–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º",
    date: "27 –æ–∫—Ç—è–±—Ä—è 2024 –≥–æ–¥–∞",
  },
  {
    label: { n: 27, l: "–û–ö–¢" },
    title: "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç—è–∑–∞–Ω–∏—è —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤",
    text: "–°–æ—Å—Ç–æ–∏—Ç—å—Å—è —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –ø–æ —Ä–∞–∑–Ω—ã–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º",
    date: "27 –æ–∫—Ç—è–±—Ä—è 2024 –≥–æ–¥–∞",
  },

  {
    label: { n: 30, l: "–û–ö–¢" },
    title: "–ù–µ–¥–µ–ª—è –Ω–∞—É–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
    text: "–ù–∞—á–∏–Ω–∞—è —Å —ç—Ç–æ–π –¥–∞—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –Ω–∞—É—á–Ω—ã–µ –≤—ã—Å—Ç–∞–≤–∫–∏ –∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏",
    date: "30 –æ–∫—Ç—è–±—Ä—è 2024 –≥–æ–¥–∞",
  },
];
const Card = ({
  img,
  desc,
  text,
  className,
}: (typeof SLcards)[0] & { className?: string }) => {
  return (
    <section
      className={clsx(
        "py-4 px-5 max-h-[35rem] border flex flex-col gap-[.9rem] border-slate-200 rounded-md",
        className
      )}
    >
      <div className="h-[80%] overflow-hidden rounded-md">
        <img
          src={img}
          alt={text}
          className="block w-full object-cover   h-auto"
        />
      </div>
      <div>
        <h2 className="text-abu_primary font-semibold text-xl md:text-2xl">
          {text}
        </h2>
        <p className="text-[#3E3232] text-xl md:text-2xl ">{desc}</p>
      </div>
    </section>
  );
};
const AllButton = () => {
  return (
    <button className="flex py-3 w-full max-w-[31.625rem] justify-center items-center rounded-lg bg-abu_primary gap-2">
      <span className="text-2xl text-white font-bold">–í–°–ï</span>
      <ArrowRight color="white" />
    </button>
  );
};
const Events = () => {
  return (
    <section className="flex flex-col justify-between gap-3  text-white  max-h-[35rem] ">
      <section className="bg-abu_primary h-[85%] overflow-y-auto flex flex-col gap-3 py-5 px-6 rounded-md">
        <div className="flex gap-2 ">
          <Image
            alt="event icon"
            src={"/icons/events.svg"}
            width={39}
            height={39}
          />
          <h3 className=" text-xl  lg:text-3xl  font-bold  ">–ò–≤–µ–Ω—Ç—ã</h3>
        </div>
        {events.map((ev) => (
          <div key={ev.date} className="flex gap-3 ">
            <div className="w-[6.25rem] h-[5.313rem] px-3 rounded-md bg-[#FFCC00] flex items-center justify-center flex-col text-white font-bold">
              <span className="text-2xl font-bold">{ev.label.n}</span>
              <span className="text-md">{ev.label.l}</span>
            </div>
            <div className="flex flex-col gap-2">
              <h3 className="text-xl w-full text-wrap lg:text-nowrap font-bold">
                {ev.title}
              </h3>
              <p className="text-md">{ev.text}</p>
            </div>
          </div>
        ))}
      </section>
      <AllButton />
    </section>
  );
};
const News = () => {
  return (
    <Container className="w-full ">
      <Heading>–ù–æ–≤–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏—è</Heading>
      <section className="w-full flex flex-col gap-4  ">
        <section className="grid grid-cols-1 md:grid-cols-[2fr_1fr]  gap-5">
          <Card key={news[0].desc} {...news[0]} />
          <Events />
        </section>
        <section className="grid gap-3 grid-cols-1 md:grid-cols-2">
          {news.slice(0, 1).map((card) => (
            <Card key={card.desc} {...card} />
          ))}
        </section>
        <AllButton />
      </section>
    </Container>
  );
};

const partners = Array(3)
  .fill([
    { name: "ABAI IT VALLEY", img: "/aiv.svg" },
    { name: "ASTANA HUB", img: "/ah.png" },
    { name: "FREEDOM BROKER", img: "/free.png" },
    { name: "HUAWEI", img: "/h.png" },
    { name: "–ê–∫–∏–º–∞—Ç –≥–æ—Ä–æ–¥–∞ –°–µ–º–µ–π", img: "/a.png" },
    { name: "", img: "/partners/1.webp" },
    { name: "", img: "/partners/2.png" },
    { name: "", img: "/partners/3.webp" },
    { name: "", img: "/partners/4.webp" },
    { name: "", img: "/partners/5.webp" },
    { name: "", img: "/partners/6.webp" },
    { name: "", img: "/partners/7.webp" },
    { name: "", img: "/partners/8.webp" },
    { name: "", img: "/partners/9.svg" },
    { name: "", img: "/partners/10.webp" },
  ])
  .flat();
const ONE_SECOND = 1000;
const AUTO_DELAY = ONE_SECOND * 2.5;
const DRAG_BUFFER = 20;

const SPRING_OPTIONS = {
  type: "tween",
  ease: "linear", // Smooth ease-in-out easing
  duration: 0.3,
};

const PartnersSlider = () => {
  // Duplicate the slides array to ensure seamless looping
  const duplicatedSlides = [...partners, ...partners, ...partners];

  return (
    <div className="relative w-full overflow-hidden">
      {/* Wrapping div for seamless looping */}
      <motion.div
        className="flex"
        animate={{
          x: ["-100%", "0%"],
          transition: {
            ease: "linear",
            duration: 10,
            repeat: Infinity,
          },
        }}
      >
        {/* Render duplicated slides */}
        {duplicatedSlides.map(({ img, name }, index) => (
          <div
            key={index}
            className="flex-shrink-0 mx-3  flex items-center justify-center bg-white"
            style={{ width: "clamp(10rem, 1rem + 40vmin, 30rem)" }}
          >
            <div className="flex flex-col items-center justify-center">
              <div className="px-3 py-2 bg-white flex flex-col items-center text-xl gap-3">
                <img
                  src={`/icons${img}`}
                  className="w-24 md:w-32 lg:w-48" // Adjust image size with breakpoints
                  alt={name}
                />
                <h2 className="text-base md:text-lg lg:text-xl">{name}</h2>
              </div>
            </div>
          </div>
        ))}
      </motion.div>
    </div>
  );
};
const PartnersCarousel = () => {
  const centeredEl = useRef(2);
  const elPerView = useRef(5);
  const [imgIndex, setImgIndex] = useState(centeredEl.current);
  const dir = useRef("r");
  const dragX = useMotionValue(0);
  useEffect(() => {
    const resize = () => {
      if (window.innerWidth > 1200) {
        centeredEl.current = 2;
        elPerView.current = 5;
        return;
      }
      if (window.innerWidth < 1200 && window.innerWidth > 756) {
        centeredEl.current = 1;
        elPerView.current = 3;
        return;
      }
      centeredEl.current = 0;
      elPerView.current = 1;
    };
    resize();
    if (window) {
      window.addEventListener("resize", resize);
    }
    return () => removeEventListener("resize", resize);
  }, []);

  useEffect(() => {
    const intervalRef = setInterval(() => {
      const x = dragX.get();

      if (x === 0) {
        setImgIndex((pv) => {
          const { current: dirValue } = dir;

          if (dirValue && dirValue == "r") {
            const res = (pv + 1) % (partners.length - centeredEl.current);
            if (res == 0) {
              dir.current = "l";
              return pv - 1;
            }
            return res;
          } else {
            const res = pv - 1;
            //centered == 2 => res = 1
            //centered == 1 => res = 0
            //centered == 0 => res = -1
            if (res == centeredEl.current - 1) {
              dir.current = "r";
              return pv + 1;
            }
            return res;
          }
        });
      }
    }, AUTO_DELAY);

    return () => clearInterval(intervalRef);
  }, []);

  const onDragEnd = () => {
    const x = dragX.get();

    if (
      x <= -DRAG_BUFFER &&
      imgIndex < partners.length - 1 - centeredEl.current
    ) {
      setImgIndex((pv) => pv + 1);
      dir.current = "r";
    } else if (x >= DRAG_BUFFER && imgIndex > centeredEl.current) {
      setImgIndex((pv) => pv - 1);
      dir.current = "l";
    }
  };
  const getImageScale = (idx: number) => {
    if (idx == imgIndex - 2 || idx == imgIndex + 2) {
      return 0.7;
    }
    if (idx == imgIndex - 1 || idx == imgIndex + 1) {
      return 0.75;
    }
    if (idx == imgIndex) {
      return 0.9;
    }
    return 0.5;
  };

  const getImageTranslateY = (idx: number) => {
    if (idx == imgIndex - 2 || idx == imgIndex + 2) {
      return 10;
    }

    if (idx == imgIndex - 1 || idx == imgIndex + 1) {
      return 50;
    }
    if (idx == imgIndex) {
      return 100;
    }
    return -100;
  };

  const circleRef = useRef<HTMLDivElement>(null);
  return (
    <div className=" max-w-[18.75rem] md:max-w-full w-full   pt-28 md:pt-40  flex justify-center overflow-hidden">
      <motion.div
        drag="x"
        dragConstraints={{
          left: 0,
          right: 0,
        }}
        style={{
          x: dragX,
        }}
        animate={{
          translateX: `-${(imgIndex - centeredEl.current) * (100 / elPerView.current)}%`,
        }}
        transition={SPRING_OPTIONS}
        onDragEnd={onDragEnd}
        className=" flex w-full min-h-[20rem] gap-0 cursor-grab  active:cursor-grabbing"
      >
        {partners.map((i, idx) => (
          <motion.div
            ref={circleRef}
            key={idx}
            style={{
              width: 100 / elPerView.current + "%",
              height: circleRef.current?.offsetWidth,
            }}
            className="flex shadow-white/40 shadow-2xl p-3 min-h-[16.875rem] items-center relative flex-col  overflow-hidden flex-none justify-center   rounded-full bg-white"
            animate={{
              scale: getImageScale(idx),
              y: -getImageTranslateY(idx),
            }}
          >
            <div
              style={{
                backgroundImage: `url(/icons${i.img})`,
                backgroundSize: "contain",
                backgroundPosition: "center",
                backgroundRepeat: "no-repeat",
              }}
              className="w-[60%] h-[60%]" // Ensure both width and height are set
            />
            <h2 className="font-bold text-center text-md md:text-lg lg:text-xl text-abu_primary">
              {i.name}
            </h2>
          </motion.div>
        ))}
      </motion.div>
    </div>
  );
};
const Dots = () => {
  return (
    <div className="flex gap-5 mt-5  ">
      {Array(7)
        .fill("*")
        .map((_, idx) => (
          <div
            key={idx}
            className={clsx(
              " h-5  rounded-full",
              idx == 3 ? "w-10 bg-white" : "w-5 bg-white/60"
            )}
          />
        ))}
    </div>
  );
};
const Partners = () => {
  return (
    <section className="bg-abu_primary py-20">
      <Container className="grid place-items-center   ">
        <Heading className="text-center font-bold   mb-[37px] text-white">
          –ù–ê–®–ò –ü–ê–†–¢–ù–ï–†–´
        </Heading>
        {/* <PartnersSlider /> */}
        <PartnersCarousel />
        <Dots />
      </Container>
    </section>
  );
};
const socials = ["/vk.png", "inst.png", "fb.png", "yt.png", "in.png"];
const Accreditation = () => {
  const locale = useParams().locale;
  return (
    <Container className="px-2 md:px-0">
      <div className="flex gap-5 items-center mb-[3.938rem] justify-center md:justify-end">
        <Heading className="md:mb-0">
          –ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è <br /> –∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ
        </Heading>
        <img
          src="/icons/accre.png"
          className="w-[6rem] md:w-[10.375rem] h-auto"
        />
      </div>
      <div className="grid  grid-cols-1 md:grid-cols-2 gap-4">
        {getMap({ locale: locale as string })}
        <div className="flex flex-col gap-5">
          <div className="bg-abu_primary rounded-md text-white p-10 flex flex-col gap-4 text-2xl min-h-[216px]">
            <h3 className="text-4xl font-bold">–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h3>
            <a href="tel:+7 (7222) 42-32-24">+7 (7222) 42-32-24</a>
            <a href="mailto:semey@abu.edu.kz">semey@abu.edu.kz</a>
          </div>
          <div className="bg-abu_primary rounded-md text-white p-10 min-h-[216px]">
            <h3 className="text-4xl mb-[35px] font-bold">–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</h3>
            <div className="flex gap-2">
              {socials.map((s) => (
                <img
                  key={s}
                  src={`/icons/${s}`}
                  className="w-[46px] h-[46px]"
                />
              ))}
            </div>
          </div>
        </div>
      </div>
    </Container>
  );
};
const TwoGisMap = () => {
  useEffect(() => {
    const existingScript = document.getElementById("map-script");
    if (existingScript) {
      existingScript.remove();
    }
    const script = document.createElement("script");
    script.id = "map-script";
    script.src = "/map.js"; // Path to your custom script
    script.async = true;

    // Append the new script to the document
    document.body.appendChild(script);

    // Cleanup function to remove the script if component unmounts
    return () => {
      script.remove();
    };
  }, []);
  return (
    <div>
      <Script src="https://maps.api.2gis.ru/2.0/loader.js?pkg=full" />
      <Script id="map-script" src="/map.js" strategy="beforeInteractive" />
      <div
        id="map"
        style={{
          width: "100%",
          height: "100%",
          borderRadius: 10,
          display: "block",
        }}
      ></div>
    </div>
  );
};
const ielts = [
  { img: "/icons/ielts-1.jpg", link: "https://ielts.kz/" },
  { img: "/icons/ielts-2.jpg", link: "https://ielts.idp.com/book" },
];
const IELTS = () => {
  return (
    <Container>
      <Heading>IELTS</Heading>
      <section className="flex flex-col items-center  md:flex-row md:justify-center gap-10">
        {ielts.map((i) => (
          <a href={i.link} target="_blank" key={i.link}>
            <img className="max-w-[300px]" src={i.img} alt="ielts" />
          </a>
        ))}
      </section>
    </Container>
  );
};
const getMap = ({ locale }: { locale: string }) => {
  if (locale == "ru" || locale == "kz") {
    return <TwoGisMap />;
  }
  return (
    <iframe
      className="w-full h-full rounded-md"
      src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2542.8354972776897!2d80.24475957676113!3d50.40690329049805!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x42f2653b6778ca47%3A0xc602e68a1b22b35e!2zQWxpa2hhbiBCb2tlaWtoYW4gVW5pdmVyc2l0eSAo05jQu9C40YXQsNC9INCR06nQutC10LnRhdCw0L3QvtCyINGD0L3QuNCy0LXRgNGB0LjRgtC10YLRlik!5e0!3m2!1sru!2skz!4v1730443037797!5m2!1sru!2skz"
      loading="lazy"
      referrerPolicy="no-referrer-when-downgrade"
    ></iframe>
  );
};

const AppealDialog = () => {
  const [open, setOpen] = useState(false);
  return (
    <Dialog
      open={open}
      onOpenChange={() => {
        setOpen(!open);
      }}
    >
      <DialogTrigger className="fixed z-[30] right-0 top-1/2 -translate-y-1/2 lg:p-5 p-3 bg-slate-200 border border-slate-300 rounded-tl-md rounded-bl-md  cursor-pointer ">
        <Image
          src={"/icons/appeal.svg"}
          alt="appeal-trigger"
          width={32}
          height={17}
        />
      </DialogTrigger>
      <DialogContent className=" bg-opacity-0 bg-black border-none ">
        <DialogHeader>
          <DialogTitle className="opacity-0"></DialogTitle>
          <DialogDescription className="opacity-0"></DialogDescription>
        </DialogHeader>
        <div className="">
          <Rector
            close={
              <X
                onClick={() => setOpen(false)}
                className="absolute right-5 cursor-pointer top-5 "
                color="white"
              />
            }
          />
        </div>
      </DialogContent>
    </Dialog>
  );
};

interface RectorFormInput extends InputProps {
  icon: string;
  className?: string;
}
const RectorFormInput = ({
  icon,
  className,
  ...inputProps
}: RectorFormInput) => {
  return (
    <div className="relative  w-full">
      <Image
        src={icon}
        alt="input-icon"
        width={20}
        height={20}
        className="absolute left-8 top-1/2 transform -translate-y-1/2 text-gray-500 z-10"
      />
      <input
        className={`pl-16  pr-3 lg:py-6 py-4 text-md w-full border border-gray-300 rounded-[5rem]  shadow-sm focus:outline-none focus:ring-2 focus:ring-abu_primary focus:border-transparent ${className}`} // Add additional styling as needed
        {...inputProps}
      />
    </div>
  );
};
interface RectorFormTextarea extends TextareaProps {
  icon: string;
  className?: string;
}
const RectorFormTextarea = ({
  icon,
  className,
  ...textareaProps
}: RectorFormTextarea) => {
  return (
    <div className="relative  w-full">
      <Image
        src={icon}
        alt="input-icon"
        width={20}
        height={20}
        className="absolute left-8 top-7 transform  text-gray-500 z-10"
      />
      <textarea
        className={`pl-16  pr-3 lg:py-6  py-4 text-md w-full border border-gray-300 rounded-[3rem]  shadow-sm focus:outline-none focus:ring-2 focus:ring-abu_primary focus:border-transparent ${className}`} // Add additional styling as needed
        {...textareaProps}
      />
    </div>
  );
};
